(()=>{"use strict";class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.services=[]}setServices(n){this.services=n,this.render()}connectedCallback(){this.render(),window.addEventListener("message",(n=>{n.data&&Array.isArray(n.data)&&this.setServices(n.data)}))}render(){this.shadowRoot.innerHTML=`\n            <style>\n                .services-grid {\n                    display: grid;\n                    grid-template-columns: repeat(3, 1fr);\n                    gap: 12px;\n                    padding: 12px;\n                }\n\n                .service-card {\n                    background: #ffffff;\n                    border: 1px solid #eaeaea;\n                    border-radius: 8px;\n                    padding: 12px;\n                    display: flex;\n                    flex-direction: column;\n                }\n\n                .service-name {\n                    font-size: 1.1rem;\n                    font-weight: 500;\n                    margin-bottom: 8px;\n                }\n\n                .service-description {\n                    font-size: 0.9rem;\n                    color: #666;\n                    flex-grow: 1;\n                }\n\n                .service-price {\n                    font-weight: 500;\n                    margin: 8px 0;\n                }\n\n                .book-button {\n                    background: #000;\n                    color: #fff;\n                    border: none;\n                    border-radius: 6px;\n                    padding: 8px;\n                    cursor: pointer;\n                    transition: background 0.2s;\n                }\n\n                .book-button:hover {\n                    background: #333;\n                }\n\n                @media (max-width: 1024px) {\n                    .services-grid {\n                        grid-template-columns: repeat(2, 1fr);\n                    }\n                }\n\n                @media (max-width: 640px) {\n                    .services-grid {\n                        grid-template-columns: 1fr;\n                    }\n                }\n            </style>\n            \n            <div class="services-grid">\n                ${this.services.length?this.services.map((n=>`\n                        <div class="service-card">\n                            <h3 class="service-name">${n.serviceName||"Sin nombre"}</h3>\n                            <p class="service-description">${n.description||"Sin descripci√≥n"}</p>\n                            <p class="service-price">${n.priceSummary||`${n.priceAmount||0} ${n.currency||"DKK"}`}</p>\n                            <button class="book-button" onclick="window.location.href='${n.bookingsFlowEntryUrl||"#"}'">\n                                Reservar ahora\n                            </button>\n                        </div>\n                    `)).join(""):"<div>No hay servicios disponibles</div>"}\n            </div>\n        `}}customElements.define("services-grid",n)})();